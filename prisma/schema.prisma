// Arquivo: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  name        String?
  password    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  investments Investment[]
  wallet      Wallet?      // Relação: Um usuário tem uma carteira
}

model Plan {
  id            Int      @id @default(autoincrement())
  name          String   @unique
  price         Float
  dailyReturn   Float
  
  investments   Investment[]
}

model Investment {
  id        Int      @id @default(autoincrement())
  startDate DateTime @default(now())
  status    String   @default("ACTIVE")

  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  
  planId    Int
  plan      Plan     @relation(fields: [planId], references: [id])
}

// NOVA TABELA PARA A CARTEIRA DO USUÁRIO
model Wallet {
  id                  Int      @id @default(autoincrement())
  balance             Float    @default(0.0) // Saldo de rendimentos
  referralBalance     Float    @default(0.0) // Saldo de indicações

  userId              Int      @unique // Garante que um usuário só pode ter uma carteira
  user                User     @relation(fields: [userId], references: [id])

  transactions        Transaction[] // Relação: Uma carteira tem várias transações
}

// NOVA TABELA PARA O EXTRATO DE TRANSAÇÕES
model Transaction {
  id                  Int      @id @default(autoincrement())
  amount              Float    // Valor da transação (pode ser + ou -)
  type                String   // Ex: "DAILY_YIELD", "REFERRAL_BONUS", "WITHDRAWAL"
  description         String
  createdAt           DateTime @default(now())

  walletId            Int
  wallet              Wallet   @relation(fields: [walletId], references: [id])
}