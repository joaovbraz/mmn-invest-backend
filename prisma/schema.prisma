// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  DEPOSIT
  WITHDRAW
  YIELD
  PURCHASE
}

enum PixDepositStatus {
  PENDING
  COMPLETED
}

model User {
  id            Int           @id @default(autoincrement())
  email         String        @unique
  name          String
  password      String
  role          String        @default("USER")
  phone         String?
  referralCode  String        @unique
  referrerId    Int?
  referees      User[]        @relation("Referrals")
  referrer      User?         @relation("Referrals", fields: [referrerId], references: [id])
  careerPoints  Int           @default(0)
  rank          String        @default("Bronze")
  createdAt     DateTime      @default(now())

  wallet        Wallet?
  investments   Investment[]
  pixDeposits   PixDeposit[]
}

model Wallet {
  id           Int           @id @default(autoincrement())
  userId       Int           @unique
  balance      Float         @default(0)
  createdAt    DateTime      @default(now())

  user         User          @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Transaction {
  id          Int             @id @default(autoincrement())
  walletId    Int
  amount      Float
  type        TransactionType
  description String?
  createdAt   DateTime        @default(now())

  wallet      Wallet          @relation(fields: [walletId], references: [id])
}

model Plan {
  id         Int       @id @default(autoincrement())
  name       String
  price      Float
  dailyYield Float
  active     Boolean   @default(true)

  investments Investment[]
}

model Investment {
  id        Int       @id @default(autoincrement())
  userId    Int
  planId    Int
  status    String    @default("ACTIVE")
  createdAt DateTime  @default(now())

  user      User      @relation(fields: [userId], references: [id])
  plan      Plan      @relation(fields: [planId], references: [id])
}

model PixDeposit {
  id            Int              @id @default(autoincrement())
  userId        Int
  amount        Float
  txid          String           @unique
  status        PixDepositStatus @default(PENDING)
  efilocId      Int?
  payloadQrCode String?
  imagemQrcode  String?
  createdAt     DateTime         @default(now())

  user          User             @relation(fields: [userId], references: [id])
}
